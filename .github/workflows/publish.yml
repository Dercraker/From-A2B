name: Publish Image

on: 
  push:
    branches:
      - main
      - develop

jobs:
  build_and_publish: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log Docker version
        run: docker --version

      - name: Log in to GitHub Container Registry
        id: docker_login
        run: |
          echo "Logging in to Docker..."
          echo "${{secrets.FROMA2B}}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          if [ $? -ne 0 ]; then
            echo "Docker login failed"
            exit 1
          fi

      - name: Set TAG
        id: set_tag
        run: |
          TAG=latest
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            TAG=release
          elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            TAG=pre-prod
          fi
          echo "Using TAG: ${TAG}"
          echo "::set-output name=tag::${TAG}"

      - name: Build Docker image
        run: |
          docker build . --tag ghcr.io/from-a2b/webapp:${{ steps.set_tag.outputs.tag }}
          if [ $? -ne 0 ]; then
            echo "Docker build failed"
            exit 1
          fi

      - name: Tag Docker image as latest
        run: |
          if [ -z "${{ steps.set_tag.outputs.tag }}" ]; then
            echo "TAG is not set"
            exit 1
          fi
          docker tag ghcr.io/from-a2b/webapp:${{ steps.set_tag.outputs.tag }} ghcr.io/from-a2b/webapp:latest

      - name: Push Docker image
        run: |
          if [ -z "${{ steps.set_tag.outputs.tag }}" ]; then
            echo "TAG is not set"
            exit 1
          fi
          docker push ghcr.io/from-a2b/webapp:${{ steps.set_tag.outputs.tag }}
          docker push ghcr.io/from-a2b/webapp:latest
          if [ $? -ne 0 ]; then
            echo "Docker push failed"
            exit 1
          fi
