// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

// https://github.com/chrishoermann/zod-prisma-types?tab=readme-ov-file#installation
generator zod {
  provider                         = "pnpx zod-prisma-types"
  output                           = "../generated/zod"
  useMultipleFiles                 = true
  writeBarrelFiles                 = true
  createInputTypes                 = false
  createModelTypes                 = true
  addInputTypeValidation           = true
  addIncludeType                   = true
  addSelectType                    = true
  validateWhereUniqueInput         = true
  createOptionalDefaultValuesTypes = true
  createRelationValuesTypes        = true
  createPartialTypes               = false
  useDefaultValidators             = true
  coerceDate                       = true
  writeNullishInModelTypes         = false
}

generator erd {
  provider                  = "prisma-erd-generator"
  includeRelationFromFields = true
  output                    = "../ERD.svg"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(nanoid(11))
  name            String?
  email           String    @unique
  emailVerified   DateTime?
  image           String?
  // Resend email
  resendContactId String?
  // For the Credentials provider
  passwordHash    String?

  sessions      Session[]
  accounts      Account[]
  feedbacks     Feedback[]
  organizations OrganizationMembership[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feedback {
  id      String  @id @default(nanoid(11))
  review  Int
  message String
  email   String?
  userId  String?
  user    User?   @relation(fields: [userId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserPlan {
  FREE
  PREMIUM
}
